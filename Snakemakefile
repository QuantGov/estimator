configfile: config.yaml

#### Model Evaluation #########################################################
##
##

rule evaluate:
	input:
		'scripts/models.py',
		'data/trainers.pickle',
		'data/labels.pickle'
	output:
		'data/model_evaluation.csv',
		'data/model.cfg'
	shell:
		'quantgov estimator evaluate {input} --folds=config[folds] --scoring=config[scoring] --results_outfile=output[0] --suggest_outfile=output[1]'

#### Model Training ###########################################################
##
##

rule train:
	input:
		'scripts/models.py',
		'data/model.cfg',
		'data/trainers.pickle',
		'data/labels.pickle',
	output:
		'data/model.pickle'
	shell:
		'quantgov estimator train {input} --outfile {output}'

#### Model Estimation #########################################################
##
##

subworkflow target_corpus:
	workdir: config['target_corpus']


rule estimate:
	input: 
		'data/vectorizer.py'
		'data/model.py'
		target_corpus('driver.py')
	output:
		config['results']
	shell:
		'quantgov estimator estimate {input} --outfile {output}'


#### Data Preparation #########################################################
##
##

subworkflow trainer_corpus:
	workdir: config['trainer_corpus']

rule vectorize_trainers:
	input:
		'scripts/vectorize_trainers.py',
		trainer_corpus('driver.py')
	output:
		'data/vectorizer.pickle',
		'data/trainers.pickle',
	shell:
		'python {input} --vectorizer_outfile output[0] --trainers_outfile output[1]'

rule create_labels:
	input:
		'scripts/create_labels.py',
		config['trainer_corpus']
	output:
		'data/labels.pickle'
	shell:
		'python {input} --outfile {output}'
